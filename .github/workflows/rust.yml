name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          target_name: 'poke-fighting-rust'
        - os: windows-latest
          target_name: 'poke-fighting-rust.exe'
        - os: macos-latest
          target_name: 'poke-fighting-rust'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Rust cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --release --verbose
    - name: Strip symbols
      run: strip target/release/${{ matrix.target_name }}
    - name: Upload poke-fighting-rust artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.target_name }} ${{ matrix.os }}
        path: target/release/${{ matrix.target_name }}
    - name: Run tests
      run: cargo test --verbose
    - name: Check format
      run: cargo fmt -- --check
    - name: Clippy checks
      run: cargo clippy -- -D warnings
